# 锚点 - 节点订阅的参数 [每小时更新一次订阅节点，每 300 秒一次健康检查]
NodeParam: &NodeParam {type: http, interval: 3600, health-check: {enable: true, url: 'http://cp.cloudflare.com', interval: 300}}

proxy-providers: 
  TKV:
    url: ''
    <<: *NodeParam
    override:
      additional-prefix: "[TKV] "
  xflash:
    url: ''
    <<: *NodeParam
    override:
      additional-prefix: "[xflash] "

port: 8080
socks-port: 1080
mixed-port: 7890
redir-port: 7891
tproxy-port: 7892

allow-lan: true
mode: rule
log-level: warning
keep-alive-interval: 1800
find-process-mode: off
ipv6: true
unified-delay: false
tcp-concurrent: true
global-client-fingerprint: chrome

secret: 123456
external-ui: ui
external-ui-name: xd
external-controller: 0.0.0.0:9090
external-ui-url: "https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip"

geodata-mode: false
geo-auto-update: false
geo-update-interval: 24
##geox-url:
  ## mmdb: 'https://gitlab.com/Masaiki/GeoIP2-CN/-/raw/release/Country.mmdb'
  ## asn: 'https://gitlab.com/Loon0x00/loon_data/-/raw/main/geo/GeoLite2-ASN.mmdb'

profile:
  store-selected: true
  store-fake-ip: true

tun:
  enable: false
  stack: system
  dns-hijack:
    - any:53
    - "tcp://any:53"
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true
  device: utun0

sniffer:
  enable: true
  force-dns-mapping: true
  parse-pure-ip: true
  override-destination: false
  sniff:
    HTTP:
      ports: [80, 8080-8880]
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  skip-domain:
    - "Mijia Cloud"
    - "dlg.io.mi.com"
    - "+.push.apple.com"

dns:
  enable: true
  ipv6: true
  prefer-h3: true # 是否开启 DoH 支持 HTTP/3，将并发尝试
  listen: 0.0.0.0:1053
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  fake-ip-filter:
    - rule-set:fakeip-filter
    - rule-set:private_domain
  default-nameserver:
    - 223.5.5.5
    - 223.6.6.6
  proxy-server-nameserver:
    - https://223.5.5.5/dns-query#h3=true
    - https://120.53.53.53/dns-query
  nameserver-policy:
    "rule-set:fakeip-filter,private_domain,cn_domain,apple_domain,microsoft_domain,download":
      - https://223.5.5.5/dns-query#h3=true
      - https://120.53.53.53/dns-query
  nameserver:
    - https://cloudflare-dns.com/dns-query#h3=true
    - https://8.8.8.8/dns-query

hosts:
  # 修复美团APPbug
  '^http(s)?:\/\/(.*).d.meituan.net': 'http$1://$2.dreport.meituan.net'

# 锚点 - 节点筛选组
FilterHK: &FilterHK '^(?=.*((?i)🇭🇰|香港|(\b(HK|Hong)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterSG: &FilterSG '^(?=.*((?i)🇸🇬|新加坡|狮|(\b(SG|Singapore)\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'

# 锚点 - 时延优选参数 [每 300 秒一次惰性健康检查，容差 25ms，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]
UrlTest: &UrlTest {type: url-test, interval: 300, tolerance: 25, lazy: true, url: 'http://cp.cloudflare.com', disable-udp: false, timeout: 2000, max-failed-times: 3, hidden: true, include-all-providers: true}
# 锚点 - 故障转移参数 [每 300 秒一次惰性健康检查，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]
FallBack: &FallBack {type: fallback, interval: 300, lazy: true, url: 'http://cp.cloudflare.com', disable-udp: false, timeout: 2000, max-failed-times: 3, hidden: true, include-all-providers: true}

proxies: 
  - name: "🟢 直连"
    type: direct
    udp: true

proxy-groups:
  - {name: 🚀 手动选择, type: select, include-all-providers: true, proxies: [🇭🇰香港策略, 🇸🇬新国策略]}
  - {name: ⏬低倍节点, type: select, include-all-providers: true, proxies: [🟢 直连]}
  - {name: AI, type: select, proxies: [🇸🇬新国策略, 🚀 手动选择]}
  - {name: TikTok, type: select, proxies: [🇸🇬新国策略, 🚀 手动选择]}
  - {name: Microsoft, type: select, proxies: [🟢 直连, ⏬低倍节点, 🚀 手动选择]}
  - {name: Telegram, type: select, proxies: [🇸🇬新国策略, 🚀 手动选择]}
# 策略组
  - {name: 🇭🇰香港策略, type: select, include-all-providers: true, proxies: [⏱️香港时延优选策略组, 🚥香港故障转移策略组], filter: *FilterHK}
  - {name: 🇸🇬新国策略, type: select, include-all-providers: true, proxies: [⏱️新国时延优选策略组, 🚥新国故障转移策略组], filter: *FilterSG}
# 时延优选策略组
  - {name: ⏱️香港时延优选策略组, <<: *UrlTest, filter: *FilterHK}
  - {name: ⏱️新国时延优选策略组, <<: *UrlTest, filter: *FilterSG}
# 故障转移策略组
  - {name: 🚥香港故障转移策略组, <<: *FallBack, filter: *FilterHK}
  - {name: 🚥新国故障转移策略组, <<: *FallBack, filter: *FilterSG}

rules:
  - RULE-SET,private_ip,🟢 直连,no-resolve
# 手写
  - DOMAIN-SUFFIX,emby.wtf,⏬低倍节点
  - DOMAIN-SUFFIX,koyso.com,⏬低倍节点
  - DOMAIN-SUFFIX,misakaf.org,⏬低倍节点
# domain
  - RULE-SET,private_domain,🟢 直连
  - RULE-SET,apple_domain,🟢 直连
  - RULE-SET,ai_domain,AI
  - RULE-SET,tiktok_domain,TikTok
  - RULE-SET,microsoft_domain,Microsoft
  - RULE-SET,download,⏬低倍节点
  - RULE-SET,proxy_domain,🚀 手动选择
  - RULE-SET,cn_domain,🟢 直连
# ip
  - RULE-SET,telegram_ip,Telegram,no-resolve
  - RULE-SET,cn_ip,🟢 直连
  - MATCH,🚀 手动选择

rule-anchor:
  ip: &ip {type: http, interval: 43200, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 43200, behavior: domain, format: mrs}
  domain2: &domain2 {type: http, interval: 43200, behavior: domain, format: text}

rule-providers:
  private_ip: { <<: *ip, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/clash-ruleset/privateip.mrs" }
  fakeip-filter: { <<: *domain, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/clash-ruleset/fakeip-filter.mrs" }
# domain
  private_domain: { <<: *domain, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/clash-ruleset/private.mrs" }
  apple_domain: { <<: *domain, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/clash-ruleset/apple-cn.mrs" }
  ai_domain: { <<: *domain, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/clash-ruleset/ai.mrs" }
  tiktok_domain: { <<: *domain, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/clash-ruleset/tiktok.mrs" }
  microsoft_domain: { <<: *domain, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/clash-ruleset/microsoft-cn.mrs" }
  download: { <<: *domain2, url: "https://ruleset.skk.moe/Clash/domainset/download.txt" }
  proxy_domain: { <<: *domain, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/clash-ruleset/proxy.mrs" }
  cn_domain: { <<: *domain, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/clash-ruleset/cn.mrs" }
# ip
  telegram_ip: { <<: *ip, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/clash-ruleset/telegramip.mrs" }
  cn_ip: { <<: *ip, url: "https://github.com/DustinWin/ruleset_geodata/releases/download/clash-ruleset/cnip.mrs" }