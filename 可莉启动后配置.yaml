# mihomo 配置
# 日期：2024-06-26 15:31:03
# 配置作者：https://t.me/iKeLee
# 适用版本：所有使用 mihomo 核心的程序
port: 8080
socks-port: 1080
mixed-port: 7890
redir-port: 7891
tproxy-port: 7892
unified-delay: true
geodata-mode: false
geodata-loader: standard
geo-auto-update: true
geo-update-interval: 24
tcp-concurrent: true
find-process-mode: strict
global-client-fingerprint: chrome
allow-lan: true
mode: rule
log-level: warning
ipv6: false
udp: true
external-controller: 0.0.0.0:9090
# external-ui: ui

# external-ui-url: 'https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip'
geox-url:
  # geoip: 'https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/geoip.dat'

  # geosite: 'https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/geosite.dat'
  mmdb: 'https://gitlab.com/Masaiki/GeoIP2-CN/-/raw/release/Country.mmdb'
  asn: 'https://gitlab.com/Loon0x00/loon_data/-/raw/main/geo/GeoLite2-ASN.mmdb'
profile:
  store-selected: true
  store-fake-ip: true
sniffer:
  enable: true
  force-dns-mapping: true
  parse-pure-ip: true
  override-destination: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - +.v2ex.com
  skip-domain:
    - Mijia Cloud
tun:
  enable: false
  stack: system
  dns-hijack:
    - any:53
  auto-route: true
  auto-detect-interface: true
  device: tun
  mtu: 9000
  gso: true
  gso-max-size: 65536
  endpoint-independent-nat: false
dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: true
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  fake-ip-filter:
    - "*"
    - +.lan
  default-nameserver:
    - 223.5.5.5
    - 223.6.6.6
  nameserver:
    - https://223.5.5.5/dns-query#h3=true
    - https://223.6.6.6/dns-query#h3=true
# 锚点 - 节点订阅的参数 [每小时更新一次订阅节点，每 6 秒一次健康检查]
NodeParam: &NodeParam {type: http, interval: 3600, health-check: {enable: true, url: 'http://cp.cloudflare.com', interval: 6}}
# 锚点 - 节点订阅
proxy-providers:
  tkv:
    url: ''
    !!merge <<: *NodeParam
    path: './proxy_providers/tkv.yaml'
    override:
      additional-prefix: "[tkv] " # 为订阅节点添加机场名称前缀
# 锚点 - 节点筛选组
FilterHK: &FilterHK "^(?=.*((?i)\U0001F1ED\U0001F1F0|香港|(\\b(HK|Hong)\\b)))(?!.*((?i)回国|校园|游戏|\U0001F3AE|(\\b(GAME)\\b))).*$"
FilterTW: &FilterTW "^(?=.*((?i)\U0001F1F9\U0001F1FC|台湾|(\\b(TW|Tai|Taiwan)\\b)))(?!.*((?i)回国|校园|游戏|\U0001F3AE|(\\b(GAME)\\b))).*$"
FilterJP: &FilterJP "^(?=.*((?i)\U0001F1EF\U0001F1F5|日本|川日|东京|大阪|泉日|埼玉|(\\b(JP|Japan)\\b)))(?!.*((?i)回国|校园|游戏|\U0001F3AE|(\\b(GAME)\\b))).*$"
FilterKR: &FilterKR "^(?=.*((?i)\U0001F1F0\U0001F1F7|韩国|韓|首尔|(\\b(KR|Korea)\\b)))(?!.*((?i)回国|校园|游戏|\U0001F3AE|(\\b(GAME)\\b))).*$"
FilterSG: &FilterSG "^(?=.*((?i)\U0001F1F8\U0001F1EC|新加坡|狮|(\\b(SG|Singapore)\\b)))(?!.*((?i)回国|校园|游戏|\U0001F3AE|(\\b(GAME)\\b))).*$"
FilterUS: &FilterUS "^(?=.*((?i)\U0001F1FA\U0001F1F8|美国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|(\\b(US|United States)\\b)))(?!.*((?i)回国|校园|游戏|\U0001F3AE|(\\b(GAME)\\b))).*$"
FilterUK: &FilterUK "^(?=.*((?i)\U0001F1EC\U0001F1E7|英国|伦敦|(\\b(UK|United Kingdom)\\b)))(?!.*((?i)回国|校园|游戏|\U0001F3AE|(\\b(GAME)\\b))).*$"
FilterFR: &FilterFR "^(?=.*((?i)\U0001F1EB\U0001F1F7|法国|(\\b(FR|France)\\b)))(?!.*((?i)回国|校园|游戏|\U0001F3AE|(\\b(GAME)\\b))).*$"
FilterDE: &FilterDE "^(?=.*((?i)\U0001F1E9\U0001F1EA|德国|(\\b(DE|Germany)\\b)))(?!.*((?i)回国|校园|游戏|\U0001F3AE|(\\b(GAME)\\b))).*$"
FilterGame: &FilterGame "^(?=.*((?i)游戏|\U0001F3AE|(\\b(GAME)\\b)))(?!.*((?i)回国|校园)).*$"
FilterAll: &FilterAll '^(?=.*(.))(?!.*((?i)群|邀请|返利|循环|官网|客服|网站|网址|获取|订阅|流量|到期|机场|下次|版本|官址|备用|过期|已用|联系|邮箱|工单|贩卖|通知|倒卖|防止|国内|地址|频道|无法|说明|使用|提示|特别|访问|支持|教程|关注|更新|作者|加入|(\b(USE|USED|TOTAL|EXPIRE|EMAIL|Panel|Channel|Author)\b|(\d{4}-\d{2}-\d{2}|\d+G)))).*$'
# 策略组参数锚点

# 锚点 - 时延优选参数 [每 6 秒一次惰性健康检查，容差 20ms，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]
UrlTest: &UrlTest {type: url-test, interval: 6, tolerance: 20, lazy: true, url: 'http://cp.cloudflare.com', disable-udp: false, timeout: 2000, max-failed-times: 3, hidden: true, include-all-providers: true}
# 锚点 - 故障转移参数 [每 6 秒一次惰性健康检查，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]

FallBack: &FallBack {type: fallback, interval: 6, lazy: true, url: 'http://cp.cloudflare.com', disable-udp: false, timeout: 2000, max-failed-times: 3, hidden: true, include-all-providers: true}
# 锚点 - 负载均衡参数 [每 6 秒一次惰性健康检查，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]

LoadBalance: &LoadBalance {type: load-balance, interval: 6, lazy: true, url: 'http://cp.cloudflare.com', disable-udp: false, strategy: consistent-hashing, timeout: 2000, max-failed-times: 3, hidden: true, include-all-providers: true}
# 锚点 - 规则参数 [每小时更新一次订阅规则，更新规则时使用直连策略]

RuleProviders: &RuleProviders {type: http, behavior: classical, interval: 3600, format: yaml, proxy: DIRECT}
# 策略组
proxy-groups:
  - {name: 游戏选择, type: select, include-all-providers: true, filter: *FilterGame, proxies: [DIRECT, 全球选择]}
  - {name: 全球选择, type: select, include-all-providers: true, filter: *FilterAll}
  - {name: 境外下载, type: select, include-all-providers: true, filter: *FilterAll, proxies: [DIRECT]}
  - {name: AI, type: select, include-all-providers: true, filter: *FilterAll}
  - {name: TikTok, type: select, include-all-providers: true, filter: *FilterAll}
  - {name: Telegram, type: select, proxies: [香港策略, 台湾策略, 日本策略, 韩国策略, 新国策略, 美国策略, 英国策略, 法国策略, 德国策略]}
  - {name: App Store, type: select, proxies: [DIRECT, 香港策略, 台湾策略, 日本策略, 韩国策略, 新国策略, 美国策略, 英国策略, 法国策略, 德国策略]}
  - {name: Apple ID, type: select, proxies: [DIRECT, 香港策略, 台湾策略, 日本策略, 韩国策略, 新国策略, 美国策略, 英国策略, 法国策略, 德国策略]}
  - {name: TestFlight, type: select, proxies: [DIRECT, 香港策略, 台湾策略, 日本策略, 韩国策略, 新国策略, 美国策略, 英国策略, 法国策略, 德国策略]}
  - {name: 1Password, type: select, proxies: [DIRECT, 香港策略, 台湾策略, 日本策略, 韩国策略, 新国策略, 美国策略, 英国策略, 法国策略, 德国策略]}
  - {name: Microsoft, type: select, proxies: [DIRECT, 香港策略, 台湾策略, 日本策略, 韩国策略, 新国策略, 美国策略, 英国策略, 法国策略, 德国策略]}
  - {name: Netflix, type: select, proxies: [香港策略, 台湾策略, 日本策略, 韩国策略, 新国策略, 美国策略, 英国策略, 法国策略, 德国策略]}
  - {name: Emby, type: select, proxies: [DIRECT, 香港策略, 台湾策略, 日本策略, 韩国策略, 新国策略, 美国策略, 英国策略, 法国策略, 德国策略]}
  - {name: 兜底策略, type: select, proxies: [香港策略, 台湾策略, 日本策略, 韩国策略, 新国策略, 美国策略, 英国策略, 法国策略, 德国策略, DIRECT]}
  - {name: 香港策略, type: select, proxies: [⏱香港时延优选策略组, "\U0001F6A5香港故障转移策略组", "\U0001F39B香港负载均衡策略组"]}
  - {name: 台湾策略, type: select, proxies: [⏱台湾时延优选策略组, "\U0001F6A5台湾故障转移策略组", "\U0001F39B台湾负载均衡策略组"]}
  - {name: 日本策略, type: select, proxies: [⏱日本时延优选策略组, "\U0001F6A5日本故障转移策略组", "\U0001F39B日本负载均衡策略组"]}
  - {name: 韩国策略, type: select, proxies: [⏱韩国时延优选策略组, "\U0001F6A5韩国故障转移策略组", "\U0001F39B韩国负载均衡策略组"]}
  - {name: 新国策略, type: select, proxies: [⏱新国时延优选策略组, "\U0001F6A5新国故障转移策略组", "\U0001F39B新国负载均衡策略组"]}
  - {name: 美国策略, type: select, proxies: [⏱美国时延优选策略组, "\U0001F6A5美国故障转移策略组", "\U0001F39B美国负载均衡策略组"]}
  - {name: 英国策略, type: select, proxies: [⏱英国时延优选策略组, "\U0001F6A5英国故障转移策略组", "\U0001F39B英国负载均衡策略组"]}
  - {name: 法国策略, type: select, proxies: [⏱法国时延优选策略组, "\U0001F6A5法国故障转移策略组", "\U0001F39B法国负载均衡策略组"]}
  - {name: 德国策略, type: select, proxies: [⏱德国时延优选策略组, "\U0001F6A5德国故障转移策略组", "\U0001F39B德国负载均衡策略组"]}
  # 时延优选策略组
  - {name: ⏱香港时延优选策略组, !!merge <<: *UrlTest, filter: *FilterHK}
  - {name: ⏱台湾时延优选策略组, !!merge <<: *UrlTest, filter: *FilterTW}
  - {name: ⏱日本时延优选策略组, !!merge <<: *UrlTest, filter: *FilterJP}
  - {name: ⏱韩国时延优选策略组, !!merge <<: *UrlTest, filter: *FilterKR}
  - {name: ⏱新国时延优选策略组, !!merge <<: *UrlTest, filter: *FilterSG}
  - {name: ⏱美国时延优选策略组, !!merge <<: *UrlTest, filter: *FilterUS}
  - {name: ⏱英国时延优选策略组, !!merge <<: *UrlTest, filter: *FilterUK}
  - {name: ⏱法国时延优选策略组, !!merge <<: *UrlTest, filter: *FilterFR}
  - {name: ⏱德国时延优选策略组, !!merge <<: *UrlTest, filter: *FilterDE}
  # 故障转移策略组
  - {name: "\U0001F6A5香港故障转移策略组", !!merge <<: *FallBack, filter: *FilterHK}
  - {name: "\U0001F6A5台湾故障转移策略组", !!merge <<: *FallBack, filter: *FilterTW}
  - {name: "\U0001F6A5日本故障转移策略组", !!merge <<: *FallBack, filter: *FilterJP}
  - {name: "\U0001F6A5韩国故障转移策略组", !!merge <<: *FallBack, filter: *FilterKR}
  - {name: "\U0001F6A5新国故障转移策略组", !!merge <<: *FallBack, filter: *FilterSG}
  - {name: "\U0001F6A5美国故障转移策略组", !!merge <<: *FallBack, filter: *FilterUS}
  - {name: "\U0001F6A5英国故障转移策略组", !!merge <<: *FallBack, filter: *FilterUK}
  - {name: "\U0001F6A5法国故障转移策略组", !!merge <<: *FallBack, filter: *FilterFR}
  - {name: "\U0001F6A5德国故障转移策略组", !!merge <<: *FallBack, filter: *FilterDE}
  # 负载均衡策略组
  - {name: "\U0001F39B香港负载均衡策略组", !!merge <<: *LoadBalance, filter: *FilterHK}
  - {name: "\U0001F39B台湾负载均衡策略组", !!merge <<: *LoadBalance, filter: *FilterTW}
  - {name: "\U0001F39B日本负载均衡策略组", !!merge <<: *LoadBalance, filter: *FilterJP}
  - {name: "\U0001F39B韩国负载均衡策略组", !!merge <<: *LoadBalance, filter: *FilterKR}
  - {name: "\U0001F39B新国负载均衡策略组", !!merge <<: *LoadBalance, filter: *FilterSG}
  - {name: "\U0001F39B美国负载均衡策略组", !!merge <<: *LoadBalance, filter: *FilterUS}
  - {name: "\U0001F39B英国负载均衡策略组", !!merge <<: *LoadBalance, filter: *FilterUK}
  - {name: "\U0001F39B法国负载均衡策略组", !!merge <<: *LoadBalance, filter: *FilterFR}
  - {name: "\U0001F39B德国负载均衡策略组", !!merge <<: *LoadBalance, filter: *FilterDE}
# 订阅规则
rule-providers:
  Lan:
    !!merge <<: *RuleProviders
    path: './rules/Lan.yaml'
    url: 'https://gitlab.com/lodepuly/proxy_tool_resources/-/raw/master/rule/Clash/Lan/Lan.yaml'
  Direct:
    !!merge <<: *RuleProviders
    path: './rules/Direct.yaml'
    url: 'https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Clash/Rule/Direct.yaml'
  MyDirect:
    !!merge <<: *RuleProviders
    path: './rules/DIRECT.yaml'
    url: 'https://gh.llkk.cc/https://raw.githubusercontent.com/YoYOxiaoshenke/clash-config/refs/heads/main/DIRECT.yaml'
  Proxy:
    !!merge <<: *RuleProviders
    path: './rules/Proxy.yaml'
    url: 'https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Clash/Rule/Proxy.yaml'
  ChinaDownloadCDN:
    !!merge <<: *RuleProviders
    path: './rules/ChinaDownloadCDN.yaml'
    url: 'https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Clash/Rule/ChinaDownloadCDN.yaml'
  InternationalDownloadCDN:
    !!merge <<: *RuleProviders
    path: './rules/InternationalDownloadCDN.yaml'
    url: 'https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Clash/Rule/InternationalDownloadCDN.yaml'
  AI:
    !!merge <<: *RuleProviders
    path: './rules/AI.yaml'
    url: 'https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Clash/Rule/AI.yaml'
  TikTok:
    !!merge <<: *RuleProviders
    path: './rules/TikTok.yaml'
    url: 'https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Clash/Rule/TikTok.yaml'
  Game:
    !!merge <<: *RuleProviders
    path: './rules/Game.yaml'
    url: 'https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Clash/Rule/Game.yaml'
  1Password:
    !!merge <<: *RuleProviders
    path: './rules/1PasswordUS.yaml'
    url: 'https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Clash/Rule/1PasswordUS.yaml'
  Steam:
    !!merge <<: *RuleProviders
    path: './rules/Steam.yaml'
    url: 'https://gitlab.com/lodepuly/proxy_tool_resources/-/raw/master/rule/Clash/Steam/Steam.yaml'
  Netflix:
    !!merge <<: *RuleProviders
    path: './rules/Netflix.yaml'
    url: 'https://gitlab.com/lodepuly/proxy_tool_resources/-/raw/master/rule/Clash/Netflix/Netflix.yaml'
  Emby:
    !!merge <<: *RuleProviders
    path: './rules/Emby.yaml'
    url: 'https://gh.llkk.cc/https://raw.githubusercontent.com/YoYOxiaoshenke/clash-config/refs/heads/main/Emby.yaml'
  iCloudChina:
    !!merge <<: *RuleProviders
    path: './rules/iCloudChina.yaml'
    url: 'https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Clash/Rule/iCloudChina.yaml'
  ApplePushNotificationService:
    !!merge <<: *RuleProviders
    path: './rules/ApplePushNotificationService.yaml'
    url: 'https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Clash/Rule/ApplePushNotificationService.yaml'
  AppleSoftwareUpdates:
    !!merge <<: *RuleProviders
    path: './rules/AppleSoftwareUpdates.yaml'
    url: 'https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Clash/Rule/AppleSoftwareUpdates.yaml'
  AppleID:
    !!merge <<: *RuleProviders
    path: './rules/AppleID.yaml'
    url: 'https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Clash/Rule/AppleID.yaml'
  AppStore:
    !!merge <<: *RuleProviders
    path: './rules/AppStore.yaml'
    url: 'https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Clash/Rule/AppStore.yaml'
  TestFlight:
    !!merge <<: *RuleProviders
    path: './rules/TestFlight.yaml'
    url: 'https://gitlab.com/lodepuly/proxy_tool_resources/-/raw/master/rule/Clash/TestFlight/TestFlight.yaml'
  Microsoft:
    !!merge <<: *RuleProviders
    path: './rules/Microsoft.yaml'
    url: 'https://gitlab.com/lodepuly/proxy_tool_resources/-/raw/master/rule/Clash/Microsoft/Microsoft.yaml'
  Google:
    !!merge <<: *RuleProviders
    path: './rules/Google.yaml'
    url: 'https://gitlab.com/lodepuly/proxy_tool_resources/-/raw/master/rule/Clash/Google/Google.yaml'
  Telegram:
    !!merge <<: *RuleProviders
    path: './rules/Telegram.yaml'
    url: 'https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Clash/Rule/Telegram.yaml'
  ESET_China:
    !!merge <<: *RuleProviders
    path: './rules/ESET_China.yaml'
    url: 'https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Clash/Rule/ESET_China.yaml'
# 规则指向
rules:
  - RULE-SET, Lan, DIRECT
  - RULE-SET, Direct, DIRECT
  - RULE-SET, MyDirect, DIRECT
  - RULE-SET, Proxy, 兜底策略
  - RULE-SET, ChinaDownloadCDN, DIRECT
  - RULE-SET, InternationalDownloadCDN, 境外下载
  - RULE-SET, AI, AI
  - RULE-SET, TikTok, TikTok
  - RULE-SET, Steam, 兜底策略
  - RULE-SET, Game, 游戏选择
  - RULE-SET, Netflix, Netflix
  - RULE-SET, Emby, Emby
  - RULE-SET, TestFlight, TestFlight
  - RULE-SET, iCloudChina, DIRECT
  - RULE-SET, ApplePushNotificationService, DIRECT
  - RULE-SET, AppleSoftwareUpdates, DIRECT
  - RULE-SET, AppleID, Apple ID
  - RULE-SET, AppStore, App Store
  - RULE-SET, 1Password, 1Password
  - RULE-SET, Microsoft, Microsoft
  - RULE-SET, Google, 兜底策略
  - RULE-SET, Telegram, Telegram
  - RULE-SET, ESET_China, DIRECT
  - GEOIP, CN, DIRECT
  - MATCH, 兜底策略
external-ui: ui
external-ui-name: yacd
external-ui-url: https://mirror.ghproxy.com/https://github.com/MetaCubeX/Yacd-meta/archive/refs/heads/gh-pages.zip
secret: 686899